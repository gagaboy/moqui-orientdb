/*
 * This software is in the public domain under CC0 1.0 Universal plus a 
 * Grant of Patent License.
 * 
 * To the extent possible under law, the author(s) have dedicated all
 * copyright and related and neighboring rights to this software to the
 * public domain worldwide. This software is distributed without any
 * warranty.
 * 
 * You should have received a copy of the CC0 Public Domain Dedication
 * along with this software (see the LICENSE.md file). If not, see
 * <http://creativecommons.org/publicdomain/zero/1.0/>.
 */

apply plugin: 'groovy'

sourceCompatibility = '1.8'
def componentNode = parseComponent(project)
version = componentNode.'@version'
def jarBaseName = 'moqui-orientdb'
def moquiDir = projectDir.parentFile.parentFile.parentFile
def frameworkDir = file(moquiDir.absolutePath + '/framework')

// to run use "gradle dependencyUpdates"
apply plugin: 'com.github.ben-manes.versions'
buildscript {
  repositories { jcenter() }
  dependencies { classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0' }
}
dependencyUpdates.resolutionStrategy = { componentSelection { rules -> rules.all { ComponentSelection selection ->
    boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'pr'].any { qualifier -> selection.candidate.version ==~ /(?i).*[.\d-]${qualifier}[.\d-]*/ }
    if (rejected) selection.reject('Release candidate')
} } }

repositories {
    flatDir name: 'localLib', dirs: frameworkDir.absolutePath + '/lib'
    jcenter()
}

// Log4J has annotation processors, disable to avoid warning
tasks.withType(JavaCompile) { options.compilerArgs << "-proc:none" }
tasks.withType(GroovyCompile) { options.compilerArgs << "-proc:none" }

dependencies {
    compile project(':framework')

    // OrientDB
    compile 'com.orientechnologies:orientdb-client:3.0.19' // Apache 2.0
    compile 'com.orientechnologies:orientdb-core:3.0.19' // Apache 2.0
    // orientdb-graphdb has a bunch of dependencies that conflict with other things, needed included below or elsewhere
    compile module('com.orientechnologies:orientdb-graphdb:3.0.19') { // Apache 2.0
        exclude group: 'com.tinkerpop.gremlin'
        exclude group: 'com.orientechnologies'
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'commons-beanutils' // includes commons-beanutils-core, commons-beanutils included elsewhere
    }
    compile('com.orientechnologies:orientdb-server:3.0.19') { exclude group: 'javax.mail' } // Apache 2.0
    // this is a mess: blueprints-core depends on all sorts of things and some required dependencies have conflicts
    compile module('com.tinkerpop.blueprints:blueprints-core:2.6.0')
    compile 'org.codehaus.jettison:jettison:1.4.0'
    compile 'com.carrotsearch:hppc:0.8.1'
    compile 'com.tinkerpop.gremlin:gremlin-java:2.6.0' // BSD
    compile('com.tinkerpop.gremlin:gremlin-groovy:2.6.0') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'org.apache.ant'
        exclude group: 'org.apache.ivy'
        exclude group: 'org.fusesource.jansi'
        exclude group: 'jline'
    } // BSD
    // runtime 'com.orientechnologies:orientdb-jdbc:2.2.0' // Apache 2.0
    // orientdb-enterprise optional add-on for (commercial) enterprise features
    // compile 'com.orientechnologies:orientdb-enterprise:2.2.0-beta' // Apache 2.0
}

// by default the Java plugin runs test on build, change to not do that (only run test if explicit task)
// no longer workds as of gradle 4.8 or possibly earlier, use clear() instead: check.dependsOn.remove(test)
check.dependsOn.clear()

task cleanLib(type: Delete) { delete fileTree(dir: projectDir.absolutePath+'/lib', include: '*') }
clean.dependsOn cleanLib

jar {
    destinationDir = file(projectDir.absolutePath + '/lib')
    baseName = jarBaseName
}
task copyDependencies { doLast {
    copy { from (configurations.runtime - project(':framework').configurations.runtime - project(':framework').jar.archivePath)
        into file(projectDir.absolutePath + '/lib') }
} }
copyDependencies.dependsOn cleanLib
jar.dependsOn copyDependencies
